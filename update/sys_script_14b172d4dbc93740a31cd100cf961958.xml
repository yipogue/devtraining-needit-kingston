<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>true</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">assignment_group=b8935f89db3b6300a31cd100cf9619af^state=1^EQ<item display_table="sys_user_group" display_value="NeedIt Admins" endquery="false" field="assignment_group" goto="false" newquery="false" operator="=" or="false" value="b8935f89db3b6300a31cd100cf9619af"/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="1"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>Notifying GitHub of the incident</p>]]></message>
        <name>Notify GitHub task</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	try { 
		var r = new sn_ws.RESTMessageV2('x_58872_needit.GitHub - Integration', 'Default Create');
		
		r.setStringParameter('short_description', current.short_description);
		r.setStringParameter('content', current.description);

		//override authentication profile 
		//authentication type ='basic'/ 'oauth2'
		// r.setAuthentication('basic', 'GitHub - personal');

		//set a MID server name if one wants to run the message on MID
		//r.setMIDServer('MY_MID_SERVER');

		//if the message is configured to communicate through ECC queue, either
		//by setting a MID server or calling executeAsync, one needs to set skip_sensor
		//to true. Otherwise, one may get an intermittent error that the response body is null
		//r.setEccParameter('skip_sensor', true);
		 r.setLogLevel('all');

		 var response = r.execute();
		 var responseBody = response.getBody();
		 var parsedResponse = JSON.parse(responseBody);
		 gs.info(parsedResponse);
		 current.x_58872_needit_github_issue_num = parsedResponse.number;
		 var httpStatus = response.getStatusCode();
	}
	catch(ex) {
		 var message = ex.getMessage();
		 gs.error('Encountered error: ' + message);
	}


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-22 15:31:39</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>14b172d4dbc93740a31cd100cf961958</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Notify GitHub task</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_14b172d4dbc93740a31cd100cf961958</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-23 15:55:17</sys_updated_on>
        <template>123TEXTQUERY321=GitHub^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=14b172d4dbc93740a31cd100cf961958"/>
</record_update>
